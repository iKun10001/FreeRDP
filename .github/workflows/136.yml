name: Build FreeRDP with FFmpeg

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Clean build cache
      run: |
        if (Test-Path build) { Remove-Item -Recurse -Force build }
        if (Test-Path output) { Remove-Item -Recurse -Force output }

    - name: Install CMake
      run: |
        Invoke-WebRequest -Uri https://github.com/Kitware/CMake/releases/download/v3.26.4/cmake-3.26.4-windows-x86_64.msi -OutFile cmake.msi
        Start-Process msiexec.exe -ArgumentList '/i', 'cmake.msi', '/quiet', '/norestart' -Wait
        echo "$env:ProgramFiles\CMake\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install Ninja
      run: |
        Invoke-WebRequest -Uri https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip -OutFile ninja.zip
        Expand-Archive ninja.zip -DestinationPath "$env:ProgramFiles\ninja"
        echo "$env:ProgramFiles\ninja" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install OpenSSL
      run: |
        Invoke-WebRequest -Uri https://slproweb.com/download/Win64OpenSSL_Light-3_5_0.msi -OutFile openssl.msi
        Start-Process msiexec.exe -ArgumentList '/i', 'openssl.msi', '/quiet', '/norestart' -Wait

    - name: Download and extract zlib
      run: |
        curl -L -o zlib123-dll.zip "https://sourceforge.net/projects/libpng/files/zlib/1.2.3/zlib123-dll.zip/download"
        Expand-Archive -Path zlib123-dll.zip -DestinationPath "$env:ProgramFiles\zlib"

    - name: Download and extract FFmpeg
      run: |
        Invoke-WebRequest -Uri https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z -OutFile ffmpeg.7z
        7z x ffmpeg.7z -o"$env:ProgramFiles\ffmpeg" -y

    - name: Configure FreeRDP with FFmpeg
      run: |
        cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release `
          -DWITH_PROXY=ON `
          -DWITH_OPENSSL=ON `
          -DWITH_SWSCALE=ON `
          -DZLIB_LIBRARY="$env:ProgramFiles\zlib\zlib1.dll" `
          -DZLIB_INCLUDE_DIR="$env:ProgramFiles\zlib" `
          -DFFMPEG_INCLUDE_DIR="$env:ProgramFiles\ffmpeg\ffmpeg-*-full_build\include" `
          -DFFMPEG_LIBRARIES="$env:ProgramFiles\ffmpeg\ffmpeg-*-full_build\lib"

    - name: Build FreeRDP
      run: cmake --build build --config Release

    - name: Prepare output
      run: |
        mkdir output
        Copy-Item build/client/Windows/Release/wfreerdp.exe output/136.exe -Force
        Get-ChildItem -Recurse build -Include *.dll | Copy-Item -Destination output -Force

    - name: Compress output
      run: Compress-Archive -Path output/* -DestinationPath output/freerdp_136_full.zip

    - name: Generate version tag
      id: version
      run: |
        $ts = Get-Date -Format "yyyyMMdd-HHmmss"
        echo "tag=freerdp-${ts}" >> $env:GITHUB_OUTPUT
        echo "timestamp=$ts" >> $env:GITHUB_OUTPUT

    - name: Delete old releases (older than 7 days)
      uses: dev-drprasad/delete-older-releases@v0.3.3
      with:
        keep_latest: 1
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: Build ${{ steps.version.outputs.tag }}
        body: |
          🎯 **FreeRDP Windows 构建版本**
          📅 时间：${{ steps.version.outputs.timestamp }}
          🔧 启用组件：
          - ✅ WITH_PROXY
          - ✅ WITH_OPENSSL
          - ✅ WITH_SWSCALE (FFmpeg 支持)
          - ✅ 静态链接 Zlib

          📁 输出文件：
          - 136.exe 主程序
          - 所需 DLL 自动打包
          - 打包压缩文件 freerdp_136_full.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload ZIP to Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        files: output/freerdp_136_full.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
